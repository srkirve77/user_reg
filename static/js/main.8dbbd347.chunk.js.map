{"version":3,"sources":["server-conn/fetchUsers.jsx","tablebody/tablebody.jsx","table/tablehead/tablehead.jsx","table/table.jsx","pagination/pagination.jsx","server-conn/postUser.jsx","add-user/adduserform/adduserform.jsx","add-user/adduser.jsx","homepage/homepage.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchUsers","pageNo","a","fetch","res","json","data","parseInt","code","msg","i","length","field","message","alert","UserList","getTotalPages","useState","users","setUsers","meta","pagination","pages","useEffect","getUsers","TableBody","map","user","TableRow","TableCell","align","id","name","email","gender","status","className","useStyles","makeStyles","root","background","color","fontWeight","TableHeader","classes","TableHead","roundborder","borderRadius","UserTable","Paper","Table","stickyHeader","width","fontSize","marginLeft","marginTop","backwardicon","opacity","cursor","display","height","forwardicon","Pagination","onPage","currentPage","totalPages","page","setPage","onClick","e","Button","variant","isNaN","type","onChange","target","value","postUser","method","headers","body","JSON","stringify","paper","backgroundColor","paddingTop","border","submitbutton","cancelbutton","AddUserForm","CloseButton","setName","setEmail","setGender","setStatus","onSubmit","console","log","placeholder","addbutton","marginRight","AddUser","React","open","setOpen","Modal","onClose","aria-labelledby","aria-describedby","UserRegistry","setPageNo","setTotalPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dbbd347.chunk.js","sourcesContent":["const fetchUsers = async(pageNo) => {\n    const res = await fetch('https://gorest.co.in/public-api/users?page='+pageNo,{})\n    const data = await res.json()\n    if(parseInt(data.code/100)!==2) {\n        var i;\n        var msg = \"\"\n        for(i = 0 ; i < data.data.length ; i++) {\n            msg = msg + data.data[i].field +\" \"+data.data[i].message +\",\"\n        }\n        alert(msg)\n    }\n    // /console.log(data)\n    return data\n}\n\nexport default fetchUsers\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody';\nimport { useState, useEffect } from 'react';\nimport fetchUsers from '../server-conn/fetchUsers';\nimport { TableCell, TableRow } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport './tablebody.css'\n\n\nconst UserList = ({pageNo, getTotalPages}) => {\n    const [users, setUsers] = useState()\n\n useEffect(() => {\n    //  setInterval(() => {\n    //      getUsers()\n    //  }, 3000);\n        getUsers()\n    })\n\n    async function getUsers() {\n        var data = await fetchUsers(pageNo)  \n        setUsers(data.data)\n        getTotalPages(data.meta.pagination.pages)\n    }\n\n    return (\n        <TableBody>\n            \n                { \n                users && users.map( (user) => \n                (\n                    <TableRow key = {user.id}>\n                        <TableCell align=\"center\">{user.id}</TableCell>\n                        <TableCell align=\"center\">{user.name}</TableCell>\n                        <TableCell align=\"center\">{user.email}</TableCell>\n                        <TableCell align=\"center\">{user.gender}</TableCell>\n                        <TableCell align=\"center\">{user.status}</TableCell>\n                        <TableCell align=\"center\"><EditIcon className = \"editicon\"/></TableCell>\n                        <TableCell align=\"center\"><DeleteForeverIcon className = \"deleteicon\"/></TableCell>\n                    </TableRow>\n                )\n            )}      \n            \n        </TableBody>\n    )\n}\n\nexport default UserList\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './tablehead.css'\n\nconst useStyles = makeStyles({\n    root: {\n      background: '#4856FD',\n      color: 'white',\n      fontWeight:'900'\n    }\n  });\n\nconst TableHeader = () => {\n\n    const classes = useStyles()\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell className = {classes.root} align=\"center\">Id</TableCell>\n                <TableCell className = {classes.root} align=\"center\">Name</TableCell>\n                <TableCell className = {classes.root} align=\"center\">Email</TableCell>\n                <TableCell className = {classes.root} align=\"center\">Gender</TableCell>\n                <TableCell className = {classes.root} align=\"center\">Status</TableCell>\n                <TableCell className = {classes.root} align=\"center\">Edit</TableCell>\n                <TableCell className = {classes.root} align=\"center\">Delete</TableCell>\n            </TableRow>\n        </TableHead>  \n    )\n}\n\nexport default TableHeader\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport UserList from '../tablebody/tablebody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHeader from './tablehead/tablehead'\nimport './table.css'\n\nconst useStyles = makeStyles({\n  roundborder : {\n      borderRadius:'30px',\n  }\n});\n\nconst UserTable = ({pageNo, getTotalPages}) => {\n    const classes = useStyles()\n\n    return (\n        <div>\n            <Paper className = \"userpaper\">\n             <Table stickyHeader className={classes.roundborder}>\n                <TableHeader/>\n                <UserList pageNo = {pageNo} getTotalPages = {getTotalPages}/>      \n            </Table>\n            </Paper>\n        </div>\n    )\n}\n\nexport default UserTable\n","import React from 'react'\nimport './pagination.css'\nimport { useState, useEffect } from 'react';\nimport fetchUsers from '../server-conn/fetchUsers'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n      background: '#4856FD',\n      color: 'white',\n      width:100,\n      fontWeight:'900',\n      fontSize:'13px',\n      marginLeft:10,\n      marginTop : -3\n    },\n    backwardicon : {\n        opacity: '0.7',\n        cursor:'pointer',\n        display: 'inline',\n        marginTop: 10,\n        marginLeft:500,\n        height:15\n    },\n    forwardicon : {\n        opacity: '0.6',\n        cursor:'pointer',\n        display: 'inline',\n        marginTop: 10,\n        height:15\n    }\n\n  });\n\nconst Pagination = ({onPage, currentPage, totalPages}) => {\n\n    const [page, setPage] = useState(1)\n    const classes = useStyles()\n\n    const getPage = () => {\n        if(isNaN(page))\n            page = 1\n        onPage(parseInt(page))\n    }\n\n    const moveBackward = (e) => {\n        if(currentPage!==1)\n            currentPage = currentPage - 1;\n        onPage(parseInt(currentPage))\n    }\n\n    const moveForward = (e) => {\n        if(currentPage!== totalPages)\n            currentPage = currentPage + 1;\n        onPage(parseInt(currentPage))\n    }\n\n    return (\n        <div>\n            <div className = \"pagination\">    \n                <ArrowBackIosIcon className = {classes.backwardicon} onClick = { (e) =>   moveBackward(e)}/>\n                   <div className = \"pagelabel\"> page {currentPage} of {totalPages}</div>\n                <ArrowForwardIosIcon className = {classes.forwardicon} onClick = { (e) => moveForward(e)}/>\n                <Button variant=\"contained\" color = \"primary\" className = {classes.root} onClick = {getPage}>\n                    skip to\n                </Button>\n                <input type = \"text\" className = \"skiptoinput\" onChange = { (e) => setPage(e.target.value)}></input>\n            </div>\n        </div>\n    )\n}\n\nexport default Pagination\n","const postUser = async(user) => {\n    const res = await\n    fetch('https://gorest.co.in/public-api/users',\n    {\n        method:'POST',\n        headers : {\n        'Content-Type': 'application/json' ,\n        'Authorization':'Bearer 9d8224224d0da981dc6768d900f96f7e7f5987d55971546ca180338c227e6c95'    \n        },\n        body: JSON.stringify(user),\n    })\n    const data = await res.json()\n    if(parseInt(data.code/100)!==2) {\n        var i;\n        var msg = \"\"\n        for(i = 0 ; i < data.data.length ; i++) {\n            msg = msg + data.data[i].field +\" \"+data.data[i].message +\",\"\n        }\n        alert(msg)\n    }\n    return data\n}\n\nexport default postUser\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport './adduserform.css'\nimport { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport '../../server-conn/postUser';\nimport postUser from '../../server-conn/postUser';\n\nconst useStyles = makeStyles({\n    paper:{\n        marginLeft:600,\n        marginTop:263,\n        width:600,\n        height:430,\n        backgroundColor:'white',\n        color : 'black',\n        borderRadius: '15px',\n        paddingTop: '4px',\n        border: '1px solid #4856FD',\n    },\n    submitbutton: {\n        background: '#4856FD',\n        color: 'white',\n        width:150,\n        fontWeight:'900',\n        fontSize:'15px',\n        marginLeft:100,\n        marginTop : 20\n      },\n      cancelbutton: {\n        color: 'white',\n        width:150,\n        fontWeight:'900',\n        fontSize:'15px',\n        marginLeft:130,\n        marginTop : 20\n      },\n})\n\nconst AddUserForm = ({CloseButton}) => {\n    const classes = useStyles()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [gender, setGender] = useState('Male')\n    const [status, setStatus] = useState('Inactive')\n    \n\n    const cancelForm = () => {\n        CloseButton(false)\n    }\n\n    const onSubmit = async () => {\n        const user = {name, email, gender, status}\n        var data = await postUser(user)\n        console.log(data)\n        if( parseInt(data.code/100) === 2 ) {\n            CloseButton(false)\n        }\n    }\n\n    return (\n        <div className = {classes.paper}>\n            <h1 className=\"header\">Add User Form</h1>\n            <div className = \"formfield\">\n                <label className = \"inputlabel\">Name</label>\n                <input type='text' className=\"nameinputfield\" placeholder='enter your name'\n                onChange = {(e) => setName(e.target.value)}\n                value = {name}\n                />\n            </div>\n            <br/>\n            <div className = \"formfield\">\n                <label className = \"inputlabel\">Email</label>\n                <input type='text' className=\"emailinputfield\" placeholder='enter your email'\n                onChange = {(e) => setEmail(e.target.value)}\n                value = {email}\n                />\n            </div>\n            <br/>\n            <div className = \"formfield\">\n                <label className = \"inputlabel\">Gender</label>\n                <select className=\"genderinputfield\"\n                        value={gender} \n                        onChange={(e) => setGender(e.target.value)}                 \n                    >\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                </select>\n            </div>\n            <br/>\n            <div className = \"formfield\">\n                <label className = \"inputlabel\">Status</label>\n                <select className=\"statusinputfield\"\n                        value={status} \n                        onChange={(e) => setStatus(e.target.value)} \n                    >\n                        <option value=\"Inactive\">Inactive</option>\n                        <option value=\"Active\">Active</option>\n                </select>\n            </div>\n            <Button variant=\"contained\" color = \"primary\" className = {classes.submitbutton} onClick = {onSubmit}>\n                Submit\n            </Button>\n            <Button variant=\"contained\" color = \"secondary\" className = {classes.cancelbutton} onClick={cancelForm} >\n                Cancel\n            </Button>\n        </div>\n    )\n}\n\nexport default AddUserForm\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '@material-ui/core/Modal';\nimport AddUserForm from './adduserform/adduserform';\n\nconst useStyles = makeStyles({\n    root: {\n      background: '#4856FD',\n      color: 'white',\n      width:150,\n      fontWeight:'900',\n      fontSize:'15px',\n      marginLeft:1540,\n      marginTop : -1550,\n    },\n    addbutton: {\n        marginRight:10,\n    }\n    \n})\nconst AddUser = () => {\n    const classes = useStyles()\n    const [open, setOpen] = React.useState(false);\n  \n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleCloseButtonFromModal = (CloseButton) => {\n        setOpen(CloseButton);\n    }\n    \n    return (\n        <div>\n        <Button variant=\"contained\" color = \"primary\" className = {classes.root} onClick={handleOpen}>\n            <AddIcon className = {classes.addbutton} />Add User\n        </Button>\n         <Modal\n         open = {open}\n         onClose={handleClose}\n         aria-labelledby=\"simple-modal-title\"\n         aria-describedby=\"simple-modal-description\"\n        >\n            <AddUserForm CloseButton = {handleCloseButtonFromModal}/>\n       </Modal>\n        </div>\n    )\n}\n\nexport default AddUser\n","import './homepage.css'\nimport UserTable from '../table/table'\nimport './homepage'\nimport Pagination from '../pagination/pagination'\nimport { useState, useEffect } from 'react';\nimport AddUser from '../add-user/adduser';\n\nconst UserRegistry = () => {\n    const [pageNo, setPageNo] = useState(1)\n    const [totalPages, setTotalPage] = useState(70)\n\n    const onEnter = (onPage) => {\n        console.log(onPage)\n        setPageNo(onPage)    \n    }\n\n    const onTotalPage = (getTotalPages) => {\n        setTotalPage(getTotalPages)\n    }\n\n    return (\n        <div>\n        <div className = \"sidebar\"/>\n        <AddUser/>\n        <UserTable pageNo = {pageNo} getTotalPages = {onTotalPage}/>\n        <Pagination onPage = {onEnter} currentPage = {pageNo} totalPages = {totalPages}/>\n        </div>\n    )\n}\n\nexport default UserRegistry","import './App.css';\nimport UserRegistry from './homepage/homepage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserRegistry/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}